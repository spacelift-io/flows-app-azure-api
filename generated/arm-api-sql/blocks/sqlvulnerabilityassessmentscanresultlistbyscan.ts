import { AppBlock, events } from "@slflows/sdk/v1";
import { makeAzureRequest } from "../utils/azureRequest";

const SqlVulnerabilityAssessmentScanResult_ListByScan: AppBlock = {
  name: "Sql Vulnerability Assessment Scan Result / List By Scan",
  description: "Gets a vulnerability assessment scan record of a database.",
  category: "Sql Vulnerability Assessment Scan Result",
  inputs: {
    default: {
      config: {
        serverName: {
          name: "Server Name",
          description: "Name of the server",
          type: "string",
          required: true,
        },
        vulnerabilityAssessmentName: {
          name: "Vulnerability Assessment Name",
          description: "Name of the vulnerability assessment",
          type: "string",
          required: true,
        },
        scanId: {
          name: "Scan ID",
          description: "Unique identifier",
          type: "string",
          required: true,
        },
        systemDatabaseName: {
          name: "System Database Name",
          description: "The SQL vulnerability assessment system database name.",
          type: "string",
          required: true,
        },
        subscriptionId: {
          name: "Subscription ID",
          description:
            "Azure subscription ID (optional, falls back to app-level default if not provided)",
          type: "string",
          required: false,
        },
        resourceGroupName: {
          name: "Resource Group Name",
          description:
            "Azure resource group name (optional, falls back to app-level default if not provided)",
          type: "string",
          required: false,
        },
      },
      onEvent: async (input) => {
        const url =
          `https://management.azure.com/subscriptions/${input.event.inputConfig.subscriptionId || input.app.config.subscriptionId}/resourceGroups/${input.event.inputConfig.resourceGroupName || input.app.config.resourceGroupName}/providers/Microsoft.Sql/servers/${input.event.inputConfig.serverName}/sqlVulnerabilityAssessments/${input.event.inputConfig.vulnerabilityAssessmentName}/scans/${input.event.inputConfig.scanId}/scanResults` +
          "?api-version=2023-08-01" +
          (input.event.inputConfig.systemDatabaseName
            ? `&systemDatabaseName=${input.event.inputConfig.systemDatabaseName}`
            : "");

        const result = await makeAzureRequest(
          input,
          url,
          "GET",
          undefined,
          undefined,
          false,
        );
        await events.emit(result || {});
      },
    },
  },
  outputs: {
    default: {
      possiblePrimaryParents: ["default"],
      type: {
        type: "object",
        properties: {
          value: {
            type: "array",
            items: {
              type: "object",
              properties: {
                systemData: {
                  type: "object",
                  properties: {
                    createdBy: {
                      type: "string",
                    },
                    createdByType: {
                      type: "string",
                    },
                    createdAt: {
                      type: "string",
                    },
                    lastModifiedBy: {
                      type: "string",
                    },
                    lastModifiedByType: {
                      type: "string",
                    },
                    lastModifiedAt: {
                      type: "string",
                    },
                  },
                },
                properties: {
                  type: "object",
                  properties: {
                    ruleId: {
                      type: "string",
                    },
                    status: {
                      type: "string",
                    },
                    errorMessage: {
                      type: "string",
                    },
                    isTrimmed: {
                      type: "boolean",
                    },
                    queryResults: {
                      type: "array",
                      items: {
                        type: "array",
                        items: {
                          type: "string",
                        },
                      },
                    },
                    remediation: {
                      type: "object",
                      properties: {
                        description: {
                          type: "string",
                        },
                        scripts: {
                          type: "array",
                          items: {
                            type: "string",
                          },
                        },
                        automated: {
                          type: "boolean",
                        },
                        portalLink: {
                          type: "string",
                        },
                      },
                    },
                    baselineAdjustedResult: {
                      type: "object",
                      properties: {
                        baseline: {
                          type: "object",
                          properties: {
                            expectedResults: {
                              type: "array",
                              items: {
                                type: "array",
                                items: {
                                  type: "string",
                                },
                              },
                            },
                            updatedTime: {
                              type: "string",
                            },
                          },
                        },
                        status: {
                          type: "string",
                        },
                        resultsNotInBaseline: {
                          type: "array",
                          items: {
                            type: "array",
                            items: {
                              type: "string",
                            },
                          },
                        },
                        resultsOnlyInBaseline: {
                          type: "array",
                          items: {
                            type: "array",
                            items: {
                              type: "string",
                            },
                          },
                        },
                      },
                    },
                    ruleMetadata: {
                      type: "object",
                      properties: {
                        ruleId: {
                          type: "string",
                        },
                        severity: {
                          type: "string",
                        },
                        category: {
                          type: "string",
                        },
                        ruleType: {
                          type: "string",
                        },
                        title: {
                          type: "string",
                        },
                        description: {
                          type: "string",
                        },
                        rationale: {
                          type: "string",
                        },
                        queryCheck: {
                          type: "object",
                          properties: {
                            query: {
                              type: "string",
                            },
                            expectedResult: {
                              type: "array",
                              items: {
                                type: "array",
                                items: {
                                  type: "string",
                                },
                              },
                            },
                            columnNames: {
                              type: "array",
                              items: {
                                type: "string",
                              },
                            },
                          },
                        },
                        benchmarkReferences: {
                          type: "array",
                          items: {
                            type: "object",
                            properties: {
                              benchmark: {
                                type: "string",
                              },
                              reference: {
                                type: "string",
                              },
                            },
                          },
                        },
                      },
                    },
                  },
                },
              },
            },
          },
          nextLink: {
            type: "string",
          },
        },
      },
    },
  },
};

export default SqlVulnerabilityAssessmentScanResult_ListByScan;
